#https://leetcode.com/problems/replace-employee-id-with-the-unique-identifier/description/?envType=study-plan-v2&envId=top-sql-50

SELECT e.name, eu.unique_id FROM Employees e LEFT JOIN EmployeeUNI eu ON e.id = eu.id


#https://leetcode.com/problems/product-sales-analysis-i/?envType=study-plan-v2&envId=top-sql-50

SELECT p.product_name, s.year, s.price
FROM Sales s
JOIN Product p on s.product_id = p.product_id

#https://leetcode.com/problems/customer-who-visited-but-did-not-make-any-transactions/submissions/1563215991/?envType=study-plan-v2&envId=top-sql-50

SELECT v.customer_id, COUNT(v.visit_id) AS count_no_trans
FROM Visits v
LEFT JOIN Transactions t
    ON v.visit_id = t.visit_id
WHERE t.transaction_id IS NULL
GROUP BY v.customer_id;

#https://leetcode.com/problems/rising-temperature/submissions/1564524388/?envType=study-plan-v2&envId=top-sql-50

SELECT w1.id
FROM Weather w1
JOIN Weather w2
  ON w1.recordDate = DATE_ADD(w2.recordDate, INTERVAL 1 DAY)
WHERE w1.temperature > w2.temperature;

#https://leetcode.com/problems/average-time-of-process-per-machine/?envType=study-plan-v2&envId=top-sql-50

SELECT 
    machine_id,
    ROUND(AVG(end_timestamp - start_timestamp), 3) AS processing_time
FROM (
    SELECT 
        a.machine_id,
        a.process_id,
        a.timestamp AS start_timestamp,
        b.timestamp AS end_timestamp
    FROM Activity a
    JOIN Activity b
        ON a.machine_id = b.machine_id
        AND a.process_id = b.process_id
        AND a.activity_type = 'start'
        AND b.activity_type = 'end'
) AS process_times
GROUP BY machine_id;




#https://leetcode.com/problems/employee-bonus/?envType=study-plan-v2&envId=top-sql-50
SELECT e.name, b.bonus
FROM Employee e
LEFT JOIN Bonus b ON e.empId = b.empId
WHERE b.bonus < 1000 OR b.bonus IS NULL;